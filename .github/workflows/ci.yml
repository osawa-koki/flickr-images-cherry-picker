name: ci

on: [push]

env:
  project-name: ${{ secrets.PROJECT_NAME }}
  server-directory: ./server/
  client-directory: ./client/

jobs:
  server-ci:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10"]
    defaults:
      run:
        working-directory: ${{ env.server-directory }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setting PYTHONPATH
      run: echo "PYTHONPATH=${GITHUB_WORKSPACE}/server/src/" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt
        pip install -r ./src/requirements.txt
        pip install -r ./tests/requirements.txt
    - name: Test with pytest
      run: python -m pytest ./tests/ -v
    - name: flake8 linting
      run: python -m flake8 ./src/ ./tests/
    - name: black formatting check
      run: python -m black --check ./src/ ./tests/
    - name: isort formatting check
      run: python -m isort --check ./src/ ./tests/
    - name: mypy type checking
      run: python -m mypy --ignore-missing-imports ./src/ ./tests/
  client-ci:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: ["20.x"]
    defaults:
      run:
        working-directory: ${{ env.client-directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Append data to `.env.local`
        run: chmod +x ./initializer.sh && ./initializer.sh ${{ env.project-name }}
      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: ${{ env.client-directory }}node_modules/
          key: node-modules-${{ matrix.node-version }}-${{ hashFiles('./**/yarn.lock') }}
      - name: Install dependencies
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Run test
        run: yarn test
      - name: Type check
        run: yarn type-check
      - name: Linter check
        run: yarn lint
      - name: test build
        run: yarn build
